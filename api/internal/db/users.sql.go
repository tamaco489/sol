// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: users.sql

package db

import (
	"context"
	"database/sql"
)

const findUserByAuth0UserID = `-- name: FindUserByAuth0UserID :one
SELECT id FROM users WHERE auth0_user_id = ?
`

func (q *Queries) FindUserByAuth0UserID(ctx context.Context, auth0UserID string) (int64, error) {
	row := q.db.QueryRowContext(ctx, findUserByAuth0UserID, auth0UserID)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const insertUser = `-- name: InsertUser :execresult
INSERT INTO users (auth0_user_id) VALUES (?)
`

func (q *Queries) InsertUser(ctx context.Context, auth0UserID string) (sql.Result, error) {
	return q.db.ExecContext(ctx, insertUser, auth0UserID)
}
